(()=>{"use strict";var e={38:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.AIServiceFactory=void 0;const o=n(346);class s{static getInstance(){return this.instance||(this.instance=new o.PromptAPIService),this.instance}static createNew(){return new o.PromptAPIService}static cleanup(){this.instance&&(this.instance.destroy(),this.instance=null)}static async isAvailable(){return o.PromptAPIService.checkAvailability()}}t.AIServiceFactory=s,s.instance=null},107:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ChatPanel=void 0;const o=n(139),s=n(560),i=n(628),a=n(167),r=n(38);t.ChatPanel=class{constructor(){this.element=null,this.shadowRoot=null,this.chatHistory=[],this.isVisible=!1,this.viewModeContext=null,this.isAtBottom=!0,this.autoScrollEnabled=!0,this.messagesContainer=null,this.scrollToBottomBtn=null,this.createElement(),this.loadChatHistory()}createElement(){this.element=document.createElement("div"),this.element.id=o.Constants.IDS.CHAT_PANEL,this.element.style.cssText=`\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: min(90vw, ${o.Constants.UI_DIMENSIONS.CHAT_PANEL.WIDTH}px);\n            height: min(85vh, ${o.Constants.UI_DIMENSIONS.CHAT_PANEL.HEIGHT}px);\n            z-index: ${o.Constants.Z_INDEX.CHAT_PANEL};\n            display: none;\n            pointer-events: auto;\n        `,this.shadowRoot=this.element.attachShadow({mode:"open"}),this.shadowRoot.innerHTML='\n            <div class="chat-panel">\n                <div class="chat-header">\n                    <div class="header-content">\n                        <div class="header-title">\n                            <div class="title-icon">\n                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                    <path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/>\n                                </svg>\n                            </div>\n                            <div class="title-text">\n                                <h2>Netherite Assistant</h2>\n                                <span class="subtitle">AI-Powered Chat</span>\n                            </div>\n                        </div>\n                        <div class="header-actions">\n                            <button id="newChatBtn" class="header-btn" title="Start New Chat">\n                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                    <path d="M21 12a9 9 0 0 0-9-9 9.75 9.75 0 0 0-6.74 2.74L3 8"/>\n                                    <path d="M3 3v5h5"/>\n                                    <path d="M3 12a9 9 0 0 0 9 9 9.75 9.75 0 0 0 6.74-2.74L21 16"/>\n                                    <path d="M16 16h5v5"/>\n                                </svg>\n                            </button>\n                            <button id="closeBtn" class="header-btn close" title="Close Chat">\n                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                    <line x1="18" y1="6" x2="6" y2="18"/>\n                                    <line x1="6" y1="6" x2="18" y2="18"/>\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="chat-messages-wrapper">\n                    <div class="chat-messages" id="chatMessages">\n                        <div class="welcome-message">\n                            <div class="welcome-icon">\n                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                    <path d="M7 9a2 2 0 1 1 4 0v5a2 2 0 0 1-4 0V9z"/>\n                                    <path d="M17 9a2 2 0 1 1 4 0v5a2 2 0 0 1-4 0V9z"/>\n                                    <path d="M7 9V6a7 7 0 0 1 14 0v4.5"/>\n                                    <path d="M7 13.5v3a7 7 0 0 0 14 0v-4"/>\n                                </svg>\n                            </div>\n                            <h3>Welcome to Netherite AI Assistant!</h3>\n                            <p>I can help you analyze this page and fill forms intelligently.</p>\n                            <div class="features-list">\n                                <div class="feature">\n                                    <span class="feature-icon">üîç</span>\n                                    <span>Type your message to start a conversation</span>\n                                </div>\n                                <div class="feature">\n                                    <span class="feature-icon">üìÑ</span>\n                                    <span>Use <strong>@doc</strong> to reference your uploaded document</span>\n                                </div>\n                                <div class="feature">\n                                    <span class="feature-icon">‚ö°</span>\n                                    <span>Get instant AI-powered assistance</span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <button id="scrollToBottomBtn" class="scroll-to-bottom" style="display: none;" title="Scroll to bottom">\n                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                            <polyline points="7,13 12,18 17,13"/>\n                            <polyline points="7,6 12,11 17,6"/>\n                        </svg>\n                    </button>\n                </div>\n\n                <div class="chat-input-area">\n                    <div class="input-status">\n                        <div class="document-status" id="documentStatus"></div>\n                        <div class="typing-indicator" id="typingIndicator" style="display: none;">\n                            <div class="typing-dots">\n                                <span class="dot"></span>\n                                <span class="dot"></span>\n                                <span class="dot"></span>\n                            </div>\n                            <span class="typing-text">AI is thinking...</span>\n                        </div>\n                    </div>\n                    <div class="input-container">\n                        <textarea id="chatInput" placeholder="Ask me anything about this page or type @doc to reference your document..." rows="1"></textarea>\n                        <button id="sendBtn" class="send-btn" title="Send Message">\n                            <svg class="send-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">\n                                <line x1="22" y1="2" x2="11" y2="13"/>\n                                <polygon points="22,2 15,22 11,13 2,9 22,2"/>\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n            </div>\n\n            <style>\n                * {\n                    box-sizing: border-box;\n                    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;\n                }\n\n                .chat-panel {\n                    width: 100%;\n                    height: 100%;\n                    display: flex;\n                    flex-direction: column;\n                    background: #ffffff;\n                    border-radius: 16px;\n                    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);\n                    border: 1px solid rgba(0, 0, 0, 0.05);\n                    overflow: hidden;\n                    animation: slideUp 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n                }\n\n                @keyframes slideUp {\n                    from {\n                        opacity: 0;\n                        transform: translateY(20px) scale(0.95);\n                    }\n                    to {\n                        opacity: 1;\n                        transform: translateY(0) scale(1);\n                    }\n                }\n\n                /* Header Styling */\n                .chat-header {\n                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n                    color: white;\n                    padding: 20px 24px;\n                    flex-shrink: 0;\n                }\n\n                .header-content {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                }\n\n                .header-title {\n                    display: flex;\n                    align-items: center;\n                    gap: 12px;\n                }\n\n                .title-icon svg {\n                    width: 24px;\n                    height: 24px;\n                }\n\n                .title-text h2 {\n                    margin: 0;\n                    font-size: 18px;\n                    font-weight: 600;\n                    line-height: 1.2;\n                }\n\n                .subtitle {\n                    font-size: 12px;\n                    opacity: 0.8;\n                    font-weight: 400;\n                }\n\n                .header-actions {\n                    display: flex;\n                    gap: 8px;\n                }\n\n                .header-btn {\n                    width: 36px;\n                    height: 36px;\n                    border: none;\n                    border-radius: 8px;\n                    background: rgba(255, 255, 255, 0.1);\n                    color: white;\n                    cursor: pointer;\n                    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    backdrop-filter: blur(10px);\n                }\n\n                .header-btn svg {\n                    width: 16px;\n                    height: 16px;\n                }\n\n                .header-btn:hover {\n                    background: rgba(255, 255, 255, 0.2);\n                    transform: scale(1.05);\n                }\n\n                .header-btn:active {\n                    transform: scale(0.95);\n                }\n\n                /* Messages Area */\n                .chat-messages-wrapper {\n                    flex: 1;\n                    position: relative;\n                    overflow: hidden;\n                }\n\n                .chat-messages {\n                    height: 100%;\n                    overflow-y: auto;\n                    padding: 24px;\n                    display: flex;\n                    flex-direction: column;\n                    gap: 16px;\n                    scroll-behavior: smooth;\n                }\n\n                .chat-messages::-webkit-scrollbar {\n                    width: 6px;\n                }\n\n                .chat-messages::-webkit-scrollbar-track {\n                    background: #f1f5f9;\n                }\n\n                .chat-messages::-webkit-scrollbar-thumb {\n                    background: #cbd5e1;\n                    border-radius: 3px;\n                }\n\n                .chat-messages::-webkit-scrollbar-thumb:hover {\n                    background: #94a3b8;\n                }\n\n                /* Welcome Message */\n                .welcome-message {\n                    text-align: center;\n                    padding: 32px 24px;\n                    background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);\n                    border-radius: 16px;\n                    border: 1px solid #e2e8f0;\n                }\n\n                .welcome-icon svg {\n                    width: 48px;\n                    height: 48px;\n                    color: #667eea;\n                    margin-bottom: 16px;\n                }\n\n                .welcome-message h3 {\n                    margin: 0 0 8px 0;\n                    font-size: 18px;\n                    font-weight: 600;\n                    color: #1e293b;\n                }\n\n                .welcome-message p {\n                    margin: 0 0 20px 0;\n                    color: #64748b;\n                    font-size: 14px;\n                    line-height: 1.5;\n                }\n\n                .features-list {\n                    display: flex;\n                    flex-direction: column;\n                    gap: 12px;\n                    text-align: left;\n                    max-width: 320px;\n                    margin: 0 auto;\n                }\n\n                .feature {\n                    display: flex;\n                    align-items: center;\n                    gap: 12px;\n                    padding: 12px;\n                    background: white;\n                    border-radius: 12px;\n                    border: 1px solid #e2e8f0;\n                }\n\n                .feature-icon {\n                    font-size: 16px;\n                    flex-shrink: 0;\n                }\n\n                .feature span:last-child {\n                    font-size: 13px;\n                    color: #475569;\n                    line-height: 1.4;\n                }\n\n                /* Chat Messages */\n                .message {\n                    max-width: 75%;\n                    padding: 16px 20px;\n                    border-radius: 20px;\n                    font-size: 14px;\n                    line-height: 1.5;\n                    word-wrap: break-word;\n                    position: relative;\n                    animation: messageSlideIn 0.3s cubic-bezier(0.16, 1, 0.3, 1);\n                }\n\n                @keyframes messageSlideIn {\n                    from {\n                        opacity: 0;\n                        transform: translateY(10px) scale(0.95);\n                    }\n                    to {\n                        opacity: 1;\n                        transform: translateY(0) scale(1);\n                    }\n                }\n\n                .message.user {\n                    align-self: flex-end;\n                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n                    color: white;\n                    border-bottom-right-radius: 8px;\n                    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n                }\n\n                .message.assistant {\n                    align-self: flex-start;\n                    background: #f8fafc;\n                    border: 1px solid #e2e8f0;\n                    color: #1e293b;\n                    border-bottom-left-radius: 8px;\n                    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n                }\n\n                .message .content {\n                    margin-bottom: 4px;\n                }\n\n                .message .timestamp {\n                    font-size: 11px;\n                    opacity: 0.7;\n                    font-weight: 500;\n                }\n\n                /* Scroll to Bottom Button */\n                .scroll-to-bottom {\n                    position: absolute;\n                    bottom: 16px;\n                    left: 50%;\n                    transform: translateX(-50%);\n                    width: 40px;\n                    height: 40px;\n                    border: none;\n                    border-radius: 50%;\n                    background: #667eea;\n                    color: white;\n                    cursor: pointer;\n                    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n                    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                }\n\n                .scroll-to-bottom svg {\n                    width: 16px;\n                    height: 16px;\n                }\n\n                .scroll-to-bottom:hover {\n                    transform: translateX(-50%) scale(1.1);\n                    box-shadow: 0 6px 16px rgba(102, 126, 234, 0.4);\n                }\n\n                /* Input Area */\n                .chat-input-area {\n                    padding: 16px 24px 24px;\n                    border-top: 1px solid #e2e8f0;\n                    background: #fafbfc;\n                    flex-shrink: 0;\n                }\n\n                .input-status {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    margin-bottom: 12px;\n                    min-height: 20px;\n                }\n\n                .document-status {\n                    font-size: 12px;\n                    color: #64748b;\n                    font-weight: 500;\n                }\n\n                .typing-indicator {\n                    display: flex;\n                    align-items: center;\n                    gap: 8px;\n                    color: #667eea;\n                    font-size: 12px;\n                    font-weight: 500;\n                }\n\n                .typing-dots {\n                    display: flex;\n                    gap: 4px;\n                }\n\n                .typing-indicator .dot {\n                    width: 4px;\n                    height: 4px;\n                    border-radius: 50%;\n                    background: #667eea;\n                    animation: typingPulse 1.4s infinite ease-in-out;\n                }\n\n                .typing-indicator .dot:nth-child(2) {\n                    animation-delay: 0.2s;\n                }\n\n                .typing-indicator .dot:nth-child(3) {\n                    animation-delay: 0.4s;\n                }\n\n                @keyframes typingPulse {\n                    0%, 60%, 100% {\n                        opacity: 0.3;\n                        transform: scale(0.8);\n                    }\n                    30% {\n                        opacity: 1;\n                        transform: scale(1);\n                    }\n                }\n\n                .input-container {\n                    display: flex;\n                    gap: 12px;\n                    align-items: flex-end;\n                    background: white;\n                    border: 2px solid #e2e8f0;\n                    border-radius: 16px;\n                    padding: 4px 4px 4px 16px;\n                    transition: border-color 0.2s ease;\n                }\n\n                .input-container:focus-within {\n                    border-color: #667eea;\n                    box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n                }\n\n                #chatInput {\n                    flex: 1;\n                    min-height: 20px;\n                    max-height: 120px;\n                    padding: 12px 0;\n                    border: none;\n                    background: transparent;\n                    color: #1e293b;\n                    font-family: inherit;\n                    font-size: 14px;\n                    line-height: 1.5;\n                    resize: none;\n                    outline: none;\n                }\n\n                #chatInput::placeholder {\n                    color: #94a3b8;\n                }\n\n                .send-btn {\n                    width: 40px;\n                    height: 40px;\n                    border: none;\n                    border-radius: 12px;\n                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n                    color: white;\n                    cursor: pointer;\n                    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    flex-shrink: 0;\n                }\n\n                .send-btn svg {\n                    width: 18px;\n                    height: 18px;\n                }\n\n                .send-btn:hover {\n                    transform: scale(1.05);\n                    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n                }\n\n                .send-btn:active {\n                    transform: scale(0.95);\n                }\n\n                .send-btn:disabled {\n                    opacity: 0.5;\n                    cursor: not-allowed;\n                    transform: none;\n                }\n\n                /* Dark mode support */\n                @media (prefers-color-scheme: dark) {\n                    .chat-panel {\n                        background: #1e293b;\n                        border: 1px solid #334155;\n                    }\n\n                    .welcome-message {\n                        background: linear-gradient(135deg, #334155 0%, #475569 100%);\n                        border: 1px solid #475569;\n                    }\n\n                    .welcome-message h3 {\n                        color: #f1f5f9;\n                    }\n\n                    .welcome-message p {\n                        color: #cbd5e1;\n                    }\n\n                    .feature {\n                        background: #475569;\n                        border: 1px solid #64748b;\n                        color: #f1f5f9;\n                    }\n\n                    .message.assistant {\n                        background: #334155;\n                        border: 1px solid #475569;\n                        color: #f1f5f9;\n                    }\n\n                    .chat-input-area {\n                        background: #334155;\n                        border-top: 1px solid #475569;\n                    }\n\n                    .input-container {\n                        background: #475569;\n                        border: 2px solid #64748b;\n                    }\n\n                    #chatInput {\n                        color: #f1f5f9;\n                    }\n\n                    #chatInput::placeholder {\n                        color: #94a3b8;\n                    }\n                }\n\n                /* Responsive design */\n                @media (max-width: 768px) {\n                    .chat-messages {\n                        padding: 16px;\n                    }\n\n                    .message {\n                        max-width: 85%;\n                        padding: 12px 16px;\n                    }\n\n                    .welcome-message {\n                        padding: 24px 20px;\n                    }\n\n                    .features-list {\n                        max-width: 100%;\n                    }\n                }\n            </style>\n        ',this.setupEventListeners(),document.body.appendChild(this.element),i.Logger.ui("Chat panel created","ChatPanel")}setupEventListeners(){if(!this.shadowRoot)return;const e=this.shadowRoot.getElementById("chatInput"),t=this.shadowRoot.getElementById("sendBtn"),n=this.shadowRoot.getElementById("closeBtn"),o=this.shadowRoot.getElementById("newChatBtn");t?.addEventListener("click",()=>{this.handleSendMessage()}),e?.addEventListener("keydown",e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),this.handleSendMessage())}),n?.addEventListener("click",()=>{this.hide()}),o?.addEventListener("click",()=>{this.startNewChat()}),e?.addEventListener("input",()=>{this.autoResizeTextarea(e)}),this.setupAutoScroll(),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.isVisible&&this.hide()})}async handleSendMessage(){const e=this.shadowRoot?.getElementById("chatInput"),t=e?.value.trim();if(t)try{e.value="",this.setSendButtonState(!1),this.addMessage("user",t),this.showTypingIndicator(!0);const n=await this.processDocumentReference(t),o=r.AIServiceFactory.getInstance(),s=await o.generateChatResponse(n,this.chatHistory.slice(-10),{purpose:this.viewModeContext?.pageInfo?.title,fields:this.viewModeContext?.formFields?this.viewModeContext.formFields.map(e=>e.label).join(", "):void 0});this.addMessage("assistant",s)}catch(e){i.Logger.error("Error generating chat response:",e),this.addMessage("assistant","‚ùå Sorry, I encountered an error. Please try again.")}finally{this.setSendButtonState(!0),this.showTypingIndicator(!1),this.saveChatHistory()}}async processDocumentReference(e){if(!e.includes("@doc"))return e;const t=await a.StorageManager.getCurrentDocument();if(!t)return this.updateDocumentStatus("No document uploaded. Please upload a document first."),e.replace(/@doc/g,"[No document available]");const n=`\n[Document: ${t.name}]\n${t.content}\n[End of Document]\n        `;return this.updateDocumentStatus(`üìÑ Referencing: ${t.name}`),e.replace(/@doc/g,n)}addMessage(e,t){const n=this.shadowRoot?.getElementById("chatMessages");if(!n)return;const o=n.querySelector(".welcome-message");o&&0===this.chatHistory.length&&o.remove();const s=document.createElement("div");s.className=`message ${e}`;const a=(new Date).toLocaleTimeString();s.innerHTML=`\n            <div class="content">${this.formatMessageContent(t)}</div>\n            <div class="timestamp">${a}</div>\n        `,n.appendChild(s);const r={role:e,content:t,timestamp:Date.now()};this.chatHistory.push(r),this.autoScrollEnabled&&setTimeout(()=>{this.scrollToBottom(!0)},100),i.Logger.ui(`Message added: ${e}`,"ChatPanel")}formatMessageContent(e){return e.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/`(.*?)`/g,"<code>$1</code>").replace(/\n/g,"<br>")}autoResizeTextarea(e){e.style.height="auto",e.style.height=Math.min(e.scrollHeight,120)+"px"}setupAutoScroll(){this.shadowRoot&&(this.messagesContainer=this.shadowRoot.getElementById("chatMessages"),this.scrollToBottomBtn=this.shadowRoot.getElementById("scrollToBottomBtn"),this.messagesContainer&&(this.messagesContainer.addEventListener("scroll",()=>{this.updateScrollState()}),this.messagesContainer.addEventListener("wheel",()=>{this.autoScrollEnabled=!1}),this.messagesContainer.addEventListener("touchmove",()=>{this.autoScrollEnabled=!1})),this.scrollToBottomBtn?.addEventListener("click",()=>{this.scrollToBottom(!0),this.autoScrollEnabled=!0}))}updateScrollState(){if(!this.messagesContainer||!this.scrollToBottomBtn)return;const{scrollTop:e,scrollHeight:t,clientHeight:n}=this.messagesContainer;this.isAtBottom=t-e-n<100,this.isAtBottom?(this.scrollToBottomBtn.style.display="none",this.autoScrollEnabled=!0):this.scrollToBottomBtn.style.display="flex"}scrollToBottom(e=!1){this.messagesContainer&&(e?this.messagesContainer.scrollTo({top:this.messagesContainer.scrollHeight,behavior:"smooth"}):this.messagesContainer.scrollTop=this.messagesContainer.scrollHeight)}setSendButtonState(e){const t=this.shadowRoot?.getElementById("sendBtn");t&&(t.disabled=!e)}showTypingIndicator(e){const t=this.shadowRoot?.getElementById("typingIndicator");t&&(t.style.display=e?"flex":"none")}updateDocumentStatus(e){const t=this.shadowRoot?.getElementById("documentStatus");t&&(t.innerHTML=e)}startNewChat(){this.chatHistory=[];const e=this.shadowRoot?.getElementById("chatMessages");e&&(e.innerHTML='\n                <div class="welcome-message">\n                    <p>üëã Welcome to Netherite AI Assistant!</p>\n                    <p>I can help you analyze this page and fill forms intelligently.</p>\n                    <p>Type your message or use <strong>@doc</strong> to reference your uploaded document.</p>\n                </div>\n            '),this.updateDocumentStatus(""),i.Logger.ui("New chat started","ChatPanel")}setViewModeContext(e){this.viewModeContext=e,i.Logger.debug("View mode context set",e)}async loadChatHistory(){try{if(this.chatHistory=await a.StorageManager.getChatHistory(),this.chatHistory.length>0){const e=this.shadowRoot?.getElementById("chatMessages");e&&(e.innerHTML="",this.chatHistory.forEach(e=>{this.addMessageToUI(e)}))}}catch(e){i.Logger.error("Failed to load chat history:",e)}}addMessageToUI(e){const t=this.shadowRoot?.getElementById("chatMessages");if(!t)return;const n=document.createElement("div");n.className=`message ${e.role}`;const o=new Date(e.timestamp).toLocaleTimeString();n.innerHTML=`\n            <div class="content">${this.formatMessageContent(e.content)}</div>\n            <div class="timestamp">${o}</div>\n        `,t.appendChild(n)}async saveChatHistory(){try{await a.StorageManager.saveChatHistory(this.chatHistory)}catch(e){i.Logger.error("Failed to save chat history:",e)}}show(){this.element&&!this.isVisible&&(this.element.style.display="block",this.isVisible=!0,setTimeout(()=>{const e=this.shadowRoot?.getElementById("chatInput");e?.focus()},100),i.Logger.ui("Chat panel shown","ChatPanel"))}hide(){if(!this.element||!this.isVisible)return;this.element.style.display="none",this.isVisible=!1;const e=new CustomEvent("netherite:chat-close");document.dispatchEvent(e),i.Logger.ui("Chat panel hidden","ChatPanel")}isOpen(){return this.isVisible}destroy(){this.element&&(s.ThemeManager.removeObserver(this.shadowRoot),document.body.removeChild(this.element),this.element=null,this.shadowRoot=null),i.Logger.ui("Chat panel destroyed","ChatPanel")}}},122:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FloatingToolbar=void 0;const o=n(139),s=n(167),i=n(628);t.FloatingToolbar=class{constructor(){this.element=null,this.shadowRoot=null,this.isDragging=!1,this.dragOffset={x:0,y:0},this.isVisible=!1,this.mouseX=0,this.dockItems=[{id:"scanner",name:"Scanner",iconSvg:'<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"/><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"/></svg>',color:"bg-blue-500",eventType:"netherite:view-mode"},{id:"chat",name:"Chat",iconSvg:'<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"/></svg>',color:"bg-green-500",eventType:"netherite:chat-mode"},{id:"voice",name:"Voice",iconSvg:'<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 18V5l12-2v13"/><circle cx="6" cy="18" r="3"/><circle cx="18" cy="16" r="3"/></svg>',color:"bg-gradient-to-br from-pink-500 to-purple-600",eventType:"netherite:voice-mode"},{id:"finder",name:"Finder",iconSvg:'<svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"/></svg>',color:"bg-blue-500",eventType:"netherite:finder-mode"}],this.createElement(),this.setupEventListeners(),this.loadSavedPosition()}createElement(){this.element=document.createElement("div"),this.element.id=o.Constants.IDS.FLOATING_TOOLBAR,this.element.style.cssText=`\n            position: fixed;\n            top: 80px;\n            left: 50%;\n            transform: translateX(-50%);\n            z-index: ${o.Constants.Z_INDEX.FLOATING_TOOLBAR};\n            width: auto;\n            height: auto;\n            display: none;\n            pointer-events: auto;\n            user-select: none;\n        `,this.shadowRoot=this.element.attachShadow({mode:"open"}),this.shadowRoot.innerHTML=`\n            <div class="dock-container">\n                <div class="dock-toolbar" onmousemove="this.handleMouseMove(event)" onmouseleave="this.handleMouseLeave()">\n                    ${this.dockItems.map(e=>this.createDockIcon(e)).join("")}\n                </div>\n            </div>\n\n            <style>\n                * {\n                    box-sizing: border-box;\n                    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;\n                }\n\n                .dock-container {\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    padding: 8px;\n                }\n\n                .dock-toolbar {\n                    display: flex;\n                    align-items: end;\n                    gap: 16px;\n                    padding: 16px 16px 14px;\n                    background: rgba(255, 255, 255, 0.1);\n                    backdrop-filter: blur(20px);\n                    border-radius: 24px;\n                    border: 1px solid rgba(255, 255, 255, 0.2);\n                    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n                    cursor: move;\n                    transition: all 0.3s ease;\n                }\n\n                .dock-toolbar.dragging {\n                    transform: scale(1.05);\n                    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.2);\n                }\n\n                .dock-icon {\n                    aspect-ratio: 1;\n                    cursor: pointer;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    position: relative;\n                    border-radius: 16px;\n                    transition: all 0.2s cubic-bezier(0.34, 1.56, 0.64, 1);\n                    width: 50px;\n                    height: 50px;\n                    overflow: hidden;\n                }\n\n                .dock-icon.bg-blue-500 {\n                    background: #3b82f6;\n                }\n\n                .dock-icon.bg-green-500 {\n                    background: #10b981;\n                }\n\n                .dock-icon.bg-gradient-to-br {\n                    background: linear-gradient(to bottom right, #ec4899, #8b5cf6);\n                }\n\n                .dock-icon .icon {\n                    width: 24px;\n                    height: 24px;\n                    color: white;\n                    transition: all 0.2s ease;\n                }\n\n                .dock-icon:hover {\n                    transform: translateY(-8px);\n                }\n\n                .dock-icon:hover .icon {\n                    transform: scale(1.1);\n                }\n\n                .dock-icon:active {\n                    transform: translateY(-6px) scale(0.95);\n                }\n\n                .dock-icon .tooltip {\n                    position: absolute;\n                    bottom: 100%;\n                    left: 50%;\n                    transform: translateX(-50%) translateY(-8px);\n                    background: rgba(0, 0, 0, 0.8);\n                    color: white;\n                    padding: 6px 12px;\n                    border-radius: 6px;\n                    font-size: 12px;\n                    font-weight: 600;\n                    white-space: nowrap;\n                    opacity: 0;\n                    pointer-events: none;\n                    transition: all 0.2s ease;\n                    z-index: 1000;\n                }\n\n                .dock-icon:hover .tooltip {\n                    opacity: 1;\n                    transform: translateX(-50%) translateY(-16px);\n                }\n\n                .dock-icon .shine {\n                    position: absolute;\n                    inset: 0;\n                    background: linear-gradient(to bottom right, rgba(255, 255, 255, 0.2), transparent);\n                    border-radius: 16px;\n                    transition: opacity 0.2s ease;\n                }\n\n                .dock-icon:hover .shine {\n                    opacity: 0.4;\n                }\n\n                .dock-icon .active-dot {\n                    position: absolute;\n                    bottom: -2px;\n                    left: 50%;\n                    transform: translateX(-50%);\n                    width: 4px;\n                    height: 4px;\n                    background: rgba(255, 255, 255, 0.8);\n                    border-radius: 50%;\n                    opacity: 0.7;\n                }\n\n                /* Animation for dock appearance */\n                .dock-toolbar {\n                    animation: dockFadeIn 0.3s ease-out;\n                }\n\n                @keyframes dockFadeIn {\n                    from {\n                        opacity: 0;\n                        transform: translateY(20px);\n                    }\n                    to {\n                        opacity: 1;\n                        transform: translateY(0);\n                    }\n                }\n\n                /* Responsive design */\n                @media (max-width: 768px) {\n                    .dock-toolbar {\n                        gap: 12px;\n                        padding: 12px;\n                    }\n                    \n                    .dock-icon {\n                        width: 44px;\n                        height: 44px;\n                    }\n                    \n                    .dock-icon .icon {\n                        width: 20px;\n                        height: 20px;\n                    }\n                }\n            </style>\n        `,this.setupDockEventListeners(),document.body.appendChild(this.element),i.Logger.ui("Dock-style floating toolbar created","FloatingToolbar")}createDockIcon(e){return`\n            <div class="dock-icon ${e.color}" data-item-id="${e.id}" data-event-type="${e.eventType}">\n                <div class="icon">${e.iconSvg}</div>\n                <div class="shine"></div>\n                <div class="tooltip">${e.name}</div>\n                <div class="active-dot"></div>\n            </div>\n        `}setupDockEventListeners(){if(!this.shadowRoot)return;this.shadowRoot.querySelectorAll(".dock-icon").forEach(e=>{e.addEventListener("click",t=>{t.stopPropagation();const n=e.getAttribute("data-event-type"),o=e.getAttribute("data-item-id");n&&this.handleIconClick(n,o||"")})});const e=this.shadowRoot.querySelector(".dock-toolbar");e&&(e.addEventListener("mousemove",e=>{const t=e;this.mouseX=t.clientX}),e.addEventListener("mouseleave",()=>{this.mouseX=0}))}handleIconClick(e,t){i.Logger.ui(`Dock icon clicked: ${t}`,"FloatingToolbar");const n=new CustomEvent(e,{detail:{timestamp:Date.now(),source:"dock-toolbar"}});document.dispatchEvent(n),this.updateActiveState(t)}updateActiveState(e){this.shadowRoot&&this.shadowRoot.querySelectorAll(".dock-icon").forEach(t=>{t.classList.remove("active"),t.getAttribute("data-item-id")===e&&t.classList.add("active")})}setupEventListeners(){if(!this.shadowRoot)return;const e=this.shadowRoot.querySelector(".dock-toolbar");e&&(e.addEventListener("mousedown",this.handleDragStart.bind(this)),document.addEventListener("mousemove",this.handleDragMove.bind(this)),document.addEventListener("mouseup",this.handleDragEnd.bind(this))),document.addEventListener("keydown",e=>{e.altKey&&"KeyN"===e.code&&(e.preventDefault(),this.toggle())}),i.Logger.debug("Event listeners set up for dock toolbar")}handleDragStart(e){if(!this.element)return;this.isDragging=!0;const t=this.element.getBoundingClientRect();this.dragOffset={x:e.clientX-t.left,y:e.clientY-t.top};const n=this.shadowRoot?.querySelector(".dock-toolbar");n?.classList.add("dragging"),document.body.style.cursor="move",i.Logger.debug("Dock drag started")}handleDragMove(e){if(!this.isDragging||!this.element)return;e.preventDefault();const t=e.clientX-this.dragOffset.x,n=e.clientY-this.dragOffset.y,o=window.innerWidth-this.element.offsetWidth,s=window.innerHeight-this.element.offsetHeight,i=Math.max(0,Math.min(t,o)),a=Math.max(0,Math.min(n,s));this.element.style.left=`${i}px`,this.element.style.top=`${a}px`,this.element.style.transform="none"}handleDragEnd(){if(!this.isDragging||!this.element)return;this.isDragging=!1;const e=this.shadowRoot?.querySelector(".dock-toolbar");e?.classList.remove("dragging"),document.body.style.cursor="";const t=this.element.getBoundingClientRect();s.StorageManager.saveToolbarPosition(t.left,t.top),i.Logger.debug("Dock drag ended, position saved")}async loadSavedPosition(){const e=await s.StorageManager.getToolbarPosition();e&&this.element&&(this.element.style.left=`${e.x}px`,this.element.style.top=`${e.y}px`,this.element.style.transform="none",i.Logger.debug("Loaded saved toolbar position",e))}show(){this.element&&!this.isVisible&&(this.element.style.display="block",this.isVisible=!0,setTimeout(()=>{const e=this.shadowRoot?.querySelector(".dock-toolbar");e?.classList.add("dock-animate-fade-in")},10),i.Logger.ui("Dock toolbar shown","FloatingToolbar"))}hide(){this.element&&this.isVisible&&(this.element.style.display="none",this.isVisible=!1,i.Logger.ui("Dock toolbar hidden","FloatingToolbar"))}toggle(){this.isVisible?this.hide():this.show()}isToolbarVisible(){return this.isVisible}updateButtonStates(e){this.updateActiveState(e||""),i.Logger.debug("Button states updated",{activeMode:e})}destroy(){this.element&&(document.body.removeChild(this.element),this.element=null,this.shadowRoot=null),i.Logger.ui("Dock toolbar destroyed","FloatingToolbar")}}},139:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Constants=void 0;class n{}t.Constants=n,n.Z_INDEX={FLOATING_TOOLBAR:2147483647,SCANNER_OVERLAY:2147483646,CHAT_PANEL:2147483645,VIEW_PANEL:2147483644},n.IDS={FLOATING_TOOLBAR:"netherite-floating-toolbar",CHAT_PANEL:"netherite-chat-panel",VIEW_PANEL:"netherite-view-panel",SCANNER_OVERLAY:"netherite-scanner-overlay"},n.CLASSES={GLASS:"netherite-glass",GLASS_DARK:"netherite-glass-dark",METALLIC:"netherite-metallic",METALLIC_DARK:"netherite-metallic-dark",DARK_MODE:"netherite-dark-mode",SCANNER:"netherite-scanner",HIDDEN:"netherite-hidden",DRAGGING:"netherite-dragging"},n.ANIMATIONS={SCANNER_DURATION:2e3,FADE_DURATION:300,SLIDE_DURATION:400},n.STORAGE_KEYS={CURRENT_DOCUMENT:"netherite_current_document",CHAT_HISTORY:"netherite_chat_history",USER_PREFERENCES:"netherite_preferences",TOOLBAR_POSITION:"netherite_toolbar_position"},n.SHORTCUTS={ACTIVATE_TOOLBAR:"Alt+KeyN"},n.FIELD_TYPES={TEXT:["text","email","password","tel","url"],TEXTAREA:["textarea"],SELECT:["select-one","select-multiple"],DATE:["date","datetime-local","time"],NUMBER:["number","range"],CHECKBOX:["checkbox"],RADIO:["radio"],FILE:["file"]},n.AI_LIMITS={MAX_CHAT_HISTORY:50,MAX_DOCUMENT_SIZE:1e4,MAX_RETRY_ATTEMPTS:5,BASE_RETRY_DELAY:1e3},n.UI_DIMENSIONS={TOOLBAR:{WIDTH:200,HEIGHT:60},CHAT_PANEL:{WIDTH:600,HEIGHT:700},VIEW_PANEL:{WIDTH:500,HEIGHT:400}}},167:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.StorageManager=void 0;const o=n(139),s=n(628);t.StorageManager=class{static async saveDocument(e){try{await chrome.storage.local.set({[o.Constants.STORAGE_KEYS.CURRENT_DOCUMENT]:e}),s.Logger.success("Document saved to storage",e.name)}catch(e){throw s.Logger.error("Failed to save document:",e),e}}static async getCurrentDocument(){try{const e=(await chrome.storage.local.get([o.Constants.STORAGE_KEYS.CURRENT_DOCUMENT]))[o.Constants.STORAGE_KEYS.CURRENT_DOCUMENT];return e?(s.Logger.info("Document retrieved from storage",e.name),e):(s.Logger.debug("No document found in storage"),null)}catch(e){return s.Logger.error("Failed to retrieve document:",e),null}}static async removeDocument(){try{await chrome.storage.local.remove([o.Constants.STORAGE_KEYS.CURRENT_DOCUMENT]),s.Logger.success("Document removed from storage")}catch(e){throw s.Logger.error("Failed to remove document:",e),e}}static async saveChatHistory(e){try{const t=e.slice(-o.Constants.AI_LIMITS.MAX_CHAT_HISTORY);await chrome.storage.local.set({[o.Constants.STORAGE_KEYS.CHAT_HISTORY]:t}),s.Logger.debug("Chat history saved",`${t.length} messages`)}catch(e){throw s.Logger.error("Failed to save chat history:",e),e}}static async getChatHistory(){try{const e=(await chrome.storage.local.get([o.Constants.STORAGE_KEYS.CHAT_HISTORY]))[o.Constants.STORAGE_KEYS.CHAT_HISTORY]||[];return s.Logger.debug("Chat history retrieved",`${e.length} messages`),e}catch(e){return s.Logger.error("Failed to retrieve chat history:",e),[]}}static async clearChatHistory(){try{await chrome.storage.local.remove([o.Constants.STORAGE_KEYS.CHAT_HISTORY]),s.Logger.success("Chat history cleared")}catch(e){throw s.Logger.error("Failed to clear chat history:",e),e}}static async saveToolbarPosition(e,t){try{await chrome.storage.local.set({[o.Constants.STORAGE_KEYS.TOOLBAR_POSITION]:{x:e,y:t}}),s.Logger.debug("Toolbar position saved",`x: ${e}, y: ${t}`)}catch(e){s.Logger.warn("Failed to save toolbar position:",e)}}static async getToolbarPosition(){try{const e=(await chrome.storage.local.get([o.Constants.STORAGE_KEYS.TOOLBAR_POSITION]))[o.Constants.STORAGE_KEYS.TOOLBAR_POSITION];return e&&"number"==typeof e.x&&"number"==typeof e.y?(s.Logger.debug("Toolbar position retrieved",e),e):null}catch(e){return s.Logger.warn("Failed to retrieve toolbar position:",e),null}}static async savePreferences(e){try{await chrome.storage.local.set({[o.Constants.STORAGE_KEYS.USER_PREFERENCES]:e}),s.Logger.debug("User preferences saved")}catch(e){throw s.Logger.error("Failed to save user preferences:",e),e}}static async getPreferences(){try{return(await chrome.storage.local.get([o.Constants.STORAGE_KEYS.USER_PREFERENCES]))[o.Constants.STORAGE_KEYS.USER_PREFERENCES]||{}}catch(e){return s.Logger.error("Failed to retrieve user preferences:",e),{}}}static async exportChatHistory(){const e=await this.getChatHistory(),t=((new Date).toISOString(),e.map(e=>`[${new Date(e.timestamp).toLocaleString()}] ${e.role.toUpperCase()}: ${e.content}`).join("\n\n"));return`Netherite Chat History Export\nExported: ${(new Date).toLocaleString()}\n\n${"=".repeat(50)}\n\n`+t}static async getStorageStats(){try{const e=await chrome.storage.local.get(null),t=new TextEncoder;let n=0,s=0;return e[o.Constants.STORAGE_KEYS.CURRENT_DOCUMENT]&&(n=t.encode(JSON.stringify(e[o.Constants.STORAGE_KEYS.CURRENT_DOCUMENT])).length),e[o.Constants.STORAGE_KEYS.CHAT_HISTORY]&&(s=t.encode(JSON.stringify(e[o.Constants.STORAGE_KEYS.CHAT_HISTORY])).length),{documentsSize:n,chatHistorySize:s,totalSize:n+s}}catch(e){return s.Logger.error("Failed to get storage stats:",e),{documentsSize:0,chatHistorySize:0,totalSize:0}}}}},271:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SystemPrompts=void 0,t.SystemPrompts=class{static getViewModePrompt(){return"You are a web page analyzer. Analyze the provided HTML structure and:\n1. Identify the page purpose (e.g., job application, contact form, registration, survey)\n2. List all form fields with their labels and types in a structured format\n3. Summarize the page content in 2-3 sentences\n4. Highlight any required fields or special instructions\n5. Note any character limits or validation requirements\n\nFormat your response as a structured summary with clear sections:\n- Purpose: [Brief description]\n- Form Fields: [Numbered list with field name, type, and requirements]\n- Summary: [2-3 sentence overview]\n- Special Notes: [Any important requirements or constraints]"}static getChatModePrompt(e){const{pagePurpose:t,fieldsList:n,documentContent:o}=e;return`You are Netherite, an AI assistant helping users fill web forms intelligently.\n\nContext:\n- Page Purpose: ${t||"General web form"}\n- Detected Fields: ${n||"No fields detected"}\n- User Document: ${o?"Available for reference":"No document uploaded"}\n\nYour task:\n1. Understand the user's intent from their message\n2. Generate appropriate answers for form fields based on the user's document and context\n3. Provide answers in a structured format with emojis:\n   üìù [Field Name] ‚Üí [Answer]\n4. Be concise but complete - match the expected format for each field type\n5. Ask for clarification if critical information is missing\n6. For text areas, respect character limits mentioned in field descriptions\n\nAlways maintain context from previous messages in this conversation.\nIf the user references @doc, use the document content to generate personalized responses.`}static getRewriteModePrompt(e){const{fieldType:t,fieldLabel:n,characterLimit:o}=e;return`You are a content refinement assistant. Rewrite the provided text to be:\n- More professional and polished\n- Grammatically correct and well-structured\n- Concise but complete\n- Appropriate for the context: ${n} (${t})\n${o?`- Within ${o} character limit`:""}\n\nMaintain the original meaning and key information while improving clarity and impact.\nReturn only the rewritten content without explanations or formatting.`}static getSystemPrompt(e,t){switch(e){case"view":return this.getViewModePrompt();case"chat":return this.getChatModePrompt(t||{});case"rewrite":return this.getRewriteModePrompt(t||{fieldType:"text",fieldLabel:"field"});default:throw new Error(`Unknown AI mode: ${e}`)}}}},323:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ViewModeScanner=void 0;const o=n(139),s=n(560),i=n(628),a=n(38),r=n(922);t.ViewModeScanner=class{constructor(){this.scannerElement=null,this.resultPanel=null,this.shadowRoot=null,this.isScanning=!1,this.createScannerElement()}createScannerElement(){this.scannerElement=document.createElement("div"),this.scannerElement.id=o.Constants.IDS.SCANNER_OVERLAY,this.scannerElement.style.cssText=`\n            position: fixed;\n            left: 0;\n            top: 0;\n            width: 100%;\n            height: 4px;\n            z-index: ${o.Constants.Z_INDEX.SCANNER_OVERLAY};\n            display: none;\n            pointer-events: none;\n        `,this.scannerElement.className=o.Constants.CLASSES.SCANNER,document.body.appendChild(this.scannerElement),i.Logger.ui("Scanner overlay created","ViewModeScanner")}async scanPage(){if(this.isScanning)i.Logger.warn("Scan already in progress");else try{this.isScanning=!0,i.Logger.ui("Starting page scan","ViewModeScanner"),this.startScanAnimation();const e=await this.analyzePageContent();setTimeout(()=>{this.showAnalysisResults(e)},o.Constants.ANIMATIONS.SCANNER_DURATION)}catch(e){i.Logger.error("Error during page scan:",e),this.showError("Failed to analyze page. Please try again.")}finally{this.isScanning=!1}}startScanAnimation(){this.scannerElement&&(this.scannerElement.style.display="block",this.scannerElement.style.animation=`netherite-scan-effect ${o.Constants.ANIMATIONS.SCANNER_DURATION}ms ease-in-out`,setTimeout(()=>{this.scannerElement&&(this.scannerElement.style.display="none",this.scannerElement.style.animation="")},o.Constants.ANIMATIONS.SCANNER_DURATION),i.Logger.debug("Scan animation started"))}async analyzePageContent(){const e=new r.FormFieldDetector,t=this.getPageContent(),n=e.detectFields();i.Logger.debug("Page analysis started",{htmlLength:t.html.length,formFieldsCount:n.length});let o="";try{if(await a.AIServiceFactory.isAvailable()){const e=a.AIServiceFactory.getInstance();o=await e.analyzeWebpage(t.html,t.title,t.url),i.Logger.info("AI analysis completed successfully")}else o=this.generateFallbackAnalysis(t,n),i.Logger.warn("AI not available, using fallback analysis")}catch(e){i.Logger.error("AI analysis failed, using fallback:",e),o=this.generateFallbackAnalysis(t,n)}return{aiAnalysis:o,formFields:n,pageInfo:t,timestamp:Date.now()}}generateFallbackAnalysis(e,t){const{title:n,url:o}=e;let s="**Page Summary**\n\n";return s+=`Title: ${n}\n`,s+=`URL: ${o}\n\n`,t.length>0?(s+="**Form Analysis**\n\n",s+=`This page contains ${t.length} form field(s) that could be filled:\n\n`,t.forEach((e,t)=>{s+=`${t+1}. ${e.label||"Unlabeled field"} (${e.type})`,e.required&&(s+=" - Required"),s+="\n"}),s+="\n*Note: AI analysis is currently unavailable. Please ensure Chrome flags are enabled for Gemini Nano.*"):(s+="**Content Overview**\n\n",s+="This page appears to be informational content without detectable form fields.\n\n",s+="*Note: AI analysis is currently unavailable. Please ensure Chrome flags are enabled for Gemini Nano to get detailed page insights.*"),s}getPageContent(){const e=["main","article",'[role="main"]',".content","#content",".main-content","section"];let t="";for(const n of e){const e=document.querySelectorAll(n);if(e.length>0){e.forEach(e=>{t+=e.outerHTML});break}}if(!t){const e=document.body.cloneNode(!0);e.querySelectorAll('script, style, noscript, [id^="netherite"], [class*="netherite"], iframe, .ads, .advertisement').forEach(e=>e.remove()),t=e.innerHTML}return t.length>8e3&&(t=t.substring(0,8e3)+"\n... [content truncated for analysis]"),{html:t,title:document.title,url:window.location.href}}showAnalysisResults(e){this.createResultPanel(e);const t=new CustomEvent("netherite:view-complete",{detail:e});document.dispatchEvent(t),i.Logger.ui("Analysis results displayed","ViewModeScanner")}createResultPanel(e){this.removeResultPanel(),this.resultPanel=document.createElement("div"),this.resultPanel.id=o.Constants.IDS.VIEW_PANEL,this.resultPanel.style.cssText=`\n            position: fixed;\n            top: 50%;\n            left: 50%;\n            transform: translate(-50%, -50%);\n            width: ${o.Constants.UI_DIMENSIONS.VIEW_PANEL.WIDTH}px;\n            max-height: ${o.Constants.UI_DIMENSIONS.VIEW_PANEL.HEIGHT}px;\n            z-index: ${o.Constants.Z_INDEX.VIEW_PANEL};\n            pointer-events: auto;\n        `,this.shadowRoot=this.resultPanel.attachShadow({mode:"open"}),s.ThemeManager.injectThemeCSS(this.shadowRoot),s.ThemeManager.watchThemeChanges(this.shadowRoot),this.shadowRoot.innerHTML=`\n            <div class="view-panel netherite-glass netherite-animate-fade-in">\n                <div class="panel-header">\n                    <h2>üìÑ Page Analysis</h2>\n                    <div class="panel-actions">\n                        <button id="openChatBtn" class="action-btn primary">\n                            üí¨ Open Chat\n                        </button>\n                        <button id="closeBtn" class="close-btn">√ó</button>\n                    </div>\n                </div>\n                \n                <div class="panel-content">\n                    <div class="analysis-section">\n                        ${this.formatAnalysisResults(e)}\n                    </div>\n                </div>\n            </div>\n\n            <style>\n                .view-panel {\n                    width: 100%;\n                    max-height: 100%;\n                    display: flex;\n                    flex-direction: column;\n                    overflow: hidden;\n                }\n\n                .panel-header {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    padding: 20px 24px 16px;\n                    border-bottom: 1px solid var(--netherite-border);\n                }\n\n                .panel-header h2 {\n                    margin: 0;\n                    font-size: 18px;\n                    font-weight: 600;\n                    color: var(--netherite-text-primary);\n                }\n\n                .panel-actions {\n                    display: flex;\n                    align-items: center;\n                    gap: 8px;\n                }\n\n                .action-btn {\n                    padding: 8px 16px;\n                    border: none;\n                    border-radius: 8px;\n                    font-size: 14px;\n                    font-weight: 500;\n                    cursor: pointer;\n                    transition: all 0.2s ease;\n                }\n\n                .action-btn.primary {\n                    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n                    color: white;\n                }\n\n                .action-btn.primary:hover {\n                    transform: translateY(-1px);\n                    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n                }\n\n                .close-btn {\n                    width: 32px;\n                    height: 32px;\n                    border: none;\n                    border-radius: 50%;\n                    background: var(--netherite-hover-bg);\n                    color: var(--netherite-text-secondary);\n                    font-size: 18px;\n                    font-weight: bold;\n                    cursor: pointer;\n                    transition: all 0.2s ease;\n                }\n\n                .close-btn:hover {\n                    background: var(--netherite-active-bg);\n                    color: var(--netherite-text-primary);\n                }\n\n                .panel-content {\n                    flex: 1;\n                    overflow-y: auto;\n                    padding: 0 24px 24px;\n                }\n\n                .analysis-section {\n                    color: var(--netherite-text-primary);\n                    line-height: 1.6;\n                }\n\n                .analysis-section h3 {\n                    color: var(--netherite-text-accent);\n                    font-size: 16px;\n                    margin: 20px 0 12px 0;\n                }\n\n                .analysis-section p {\n                    margin: 8px 0;\n                }\n\n                .field-list {\n                    list-style: none;\n                    padding: 0;\n                    margin: 12px 0;\n                }\n\n                .field-item {\n                    display: flex;\n                    align-items: center;\n                    padding: 8px 12px;\n                    margin: 4px 0;\n                    background: var(--netherite-bg-secondary);\n                    border-radius: 6px;\n                    font-size: 14px;\n                }\n\n                .field-type {\n                    background: var(--netherite-text-accent);\n                    color: white;\n                    padding: 2px 8px;\n                    border-radius: 12px;\n                    font-size: 12px;\n                    margin-left: 8px;\n                }\n\n                .required {\n                    color: #ef4444;\n                    font-weight: 600;\n                }\n\n                /* Scrollbar styling */\n                .panel-content::-webkit-scrollbar {\n                    width: 6px;\n                }\n\n                .panel-content::-webkit-scrollbar-track {\n                    background: var(--netherite-bg-secondary);\n                    border-radius: 3px;\n                }\n\n                .panel-content::-webkit-scrollbar-thumb {\n                    background: var(--netherite-text-secondary);\n                    border-radius: 3px;\n                }\n\n                .panel-content::-webkit-scrollbar-thumb:hover {\n                    background: var(--netherite-text-primary);\n                }\n            </style>\n        `,this.setupResultPanelEvents(),document.body.appendChild(this.resultPanel),i.Logger.ui("Results panel created and displayed","ViewModeScanner")}formatAnalysisResults(e){const{aiAnalysis:t,formFields:n,pageInfo:o}=e;let s=`\n            <div class="ai-analysis">\n                <h3>ü§ñ AI Analysis</h3>\n                <div class="analysis-content">\n                    ${this.formatAIAnalysisText(t)}\n                </div>\n            </div>\n        `;return n&&n.length>0&&(s+=`\n                <div class="detected-fields">\n                    <h3>üìù Detected Form Fields (${n.length})</h3>\n                    <ul class="field-list">\n                        ${n.map(e=>`\n                            <li class="field-item">\n                                <span>${e.label||"Unlabeled field"}</span>\n                                <span class="field-type">${e.type}</span>\n                                ${e.required?'<span class="required">*</span>':""}\n                            </li>\n                        `).join("")}\n                    </ul>\n                </div>\n            `),s}formatAIAnalysisText(e){return e.replace(/\n\n/g,"</p><p>").replace(/\n/g,"<br>").replace(/^/,"<p>").replace(/$/,"</p>").replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>")}setupResultPanelEvents(){if(!this.shadowRoot)return;const e=this.shadowRoot.getElementById("closeBtn"),t=this.shadowRoot.getElementById("openChatBtn");e?.addEventListener("click",()=>{this.removeResultPanel()}),t?.addEventListener("click",()=>{this.removeResultPanel();const e=new CustomEvent("netherite:chat-mode",{detail:{fromViewMode:!0}});document.dispatchEvent(e)}),document.addEventListener("keydown",e=>{"Escape"===e.key&&this.resultPanel&&this.removeResultPanel()})}removeResultPanel(){this.resultPanel&&(s.ThemeManager.removeObserver(this.shadowRoot),document.body.removeChild(this.resultPanel),this.resultPanel=null,this.shadowRoot=null,i.Logger.ui("Results panel removed","ViewModeScanner"))}showError(e){console.error("[Netherite ViewScanner]:",e);const t=document.createElement("div");t.style.cssText=`\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            background: #ef4444;\n            color: white;\n            padding: 12px 20px;\n            border-radius: 8px;\n            z-index: ${o.Constants.Z_INDEX.FLOATING_TOOLBAR+1};\n            font-family: system-ui, sans-serif;\n        `,t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.parentNode&&document.body.removeChild(t)},5e3)}isCurrentlyScanning(){return this.isScanning}destroy(){this.removeResultPanel(),this.scannerElement&&(document.body.removeChild(this.scannerElement),this.scannerElement=null),i.Logger.ui("ViewModeScanner destroyed","ViewModeScanner")}}},346:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.PromptAPIService=void 0;const o=n(271),s=n(628);class i{constructor(){this.session=null}static async checkAvailability(){try{if("undefined"==typeof LanguageModel)return s.Logger.warn("LanguageModel API not available in this browser"),!1;const e=await LanguageModel.create();return!!e&&(e.destroy(),s.Logger.info("AI Language Model is available and ready"),!0)}catch(e){return s.Logger.error("Error checking AI availability:",e),!1}}async fetchWithRetry(e,t=5,n=1e3){for(let o=0;o<t;o++)try{return await e()}catch(e){if(o===t-1)throw e;const i=n*Math.pow(2,o);s.Logger.warn(`Retry attempt ${o+1} failed, waiting ${i}ms...`,e),await new Promise(e=>setTimeout(e,i))}throw new Error("All retry attempts failed")}async createSession(e,t){return this.fetchWithRetry(async()=>{s.Logger.info(`Creating AI session for mode: ${e}`);const t=await LanguageModel.create();return s.Logger.info("AI session created successfully"),t})}async generateContent(e,t,n){if(!await i.checkAvailability())throw new Error("AI Language Model is not available. Please check Chrome flags and model download.");let a=null;try{a=await this.createSession(t,n),s.Logger.info(`Generating content for mode: ${t}`);const i=o.SystemPrompts.getSystemPrompt(t,n),r=i?`${i}\n\n${e}`:e;s.Logger.debug("Final prompt:",r);const l=await this.fetchWithRetry(()=>a.prompt(r));return s.Logger.info("Content generated successfully"),s.Logger.debug("AI response length:",l.length),l}catch(e){throw s.Logger.error("Error during AI generation:",e),new Error(`Generation failed: ${e instanceof Error?e.message:"Unknown error"}`)}finally{if(a)try{a.destroy(),s.Logger.debug("AI session destroyed successfully")}catch(e){s.Logger.warn("Error destroying AI session:",e)}}}async analyzeWebpage(e,t,n){const o=`Analyze this webpage:\n\nHTML Structure:\n${e}\n\nPage Title: ${t}\nURL: ${n}\n\nProvide a comprehensive analysis following the specified format.`;return this.generateContent(o,"view")}async generateChatResponse(e,t,n){const o=`Previous Conversation:\n${t.slice(-10).map(e=>`${e.role}: ${e.content}`).join("\n")}\n\nUser Message: ${e}\n\nGenerate structured answers for the detected form fields based on the context and user's document (if available).`;return this.generateContent(o,"chat",n)}async rewriteContent(e,t,n,o){const s=`Original Text:\n${e}\n\nRewrite this content for the field "${t}" (${n}).`,i={fieldType:n,fieldLabel:t,characterLimit:o};return this.generateContent(s,"rewrite",i)}destroy(){if(this.session)try{this.session.destroy(),this.session=null,s.Logger.info("PromptAPIService cleaned up")}catch(e){s.Logger.warn("Error during PromptAPIService cleanup:",e)}}}t.PromptAPIService=i},560:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ThemeManager=void 0;const o=n(628);class s{static isDarkMode(){return window.matchMedia("(prefers-color-scheme: dark)").matches}static applyTheme(e){const t=this.isDarkMode(),n=e.host;t?(n.classList.add("netherite-dark-mode"),this.currentTheme="dark"):(n.classList.remove("netherite-dark-mode"),this.currentTheme="light"),o.Logger.ui("Theme applied: "+(t?"dark":"light"),"ThemeManager")}static watchThemeChanges(e){this.observers.add(e),this.applyTheme(e);const t=window.matchMedia("(prefers-color-scheme: dark)"),n=()=>{o.Logger.debug("System theme changed"),this.updateAllObservers()};t.addEventListener?t.addEventListener("change",n):t.addListener(n)}static updateAllObservers(){for(const e of this.observers)try{this.applyTheme(e)}catch(t){o.Logger.warn("Failed to update theme for shadow root:",t),this.observers.delete(e)}}static getThemeVariables(){const e="dark"===this.currentTheme;return{"--netherite-glass-bg":e?"rgba(30, 30, 30, 0.7)":"rgba(255, 255, 255, 0.15)","--netherite-glass-border":e?"rgba(255, 255, 255, 0.1)":"rgba(255, 255, 255, 0.3)","--netherite-glass-shadow":e?"0 8px 32px rgba(0, 0, 0, 0.4)":"0 8px 32px rgba(0, 0, 0, 0.1)","--netherite-glass-inset":e?"inset 0 1px 0 rgba(255, 255, 255, 0.1)":"inset 0 1px 0 rgba(255, 255, 255, 0.5)","--netherite-metallic-bg":e?"linear-gradient(135deg, rgba(60, 60, 60, 0.3) 0%, rgba(40, 40, 40, 0.2) 50%, rgba(60, 60, 60, 0.3) 100%)":"linear-gradient(135deg, rgba(255, 255, 255, 0.2) 0%, rgba(200, 200, 200, 0.1) 50%, rgba(255, 255, 255, 0.2) 100%)","--netherite-text-primary":e?"#ffffff":"#1f2937","--netherite-text-secondary":e?"#d1d5db":"#6b7280","--netherite-text-accent":e?"#60a5fa":"#3b82f6","--netherite-bg-primary":e?"#111827":"#ffffff","--netherite-bg-secondary":e?"#1f2937":"#f9fafb","--netherite-border":e?"#374151":"#e5e7eb","--netherite-hover-bg":e?"rgba(255, 255, 255, 0.1)":"rgba(0, 0, 0, 0.05)","--netherite-active-bg":e?"rgba(255, 255, 255, 0.15)":"rgba(0, 0, 0, 0.1)","--netherite-scanner-color":"rgba(59, 130, 246, 0.8)","--netherite-scanner-glow":"0 0 20px rgba(59, 130, 246, 0.6)"}}static injectThemeCSS(e){const t=this.getThemeVariables();let n=":host {\n";for(const[e,o]of Object.entries(t))n+=`  ${e}: ${o};\n`;n+="}\n",n+=this.getGlassmorphicCSS();const s=document.createElement("style");s.textContent=n,e.insertBefore(s,e.firstChild),o.Logger.debug("Theme CSS injected into shadow root")}static getGlassmorphicCSS(){return"\n.netherite-glass {\n    background: var(--netherite-glass-bg);\n    backdrop-filter: blur(20px) saturate(180%);\n    -webkit-backdrop-filter: blur(20px) saturate(180%);\n    border: 1px solid var(--netherite-glass-border);\n    box-shadow: var(--netherite-glass-shadow), var(--netherite-glass-inset);\n    border-radius: 16px;\n}\n\n.netherite-metallic {\n    background: var(--netherite-metallic-bg);\n}\n\n.netherite-scanner {\n    position: fixed;\n    left: 0;\n    width: 100%;\n    height: 4px;\n    background: linear-gradient(90deg, transparent, var(--netherite-scanner-color), transparent);\n    box-shadow: var(--netherite-scanner-glow);\n    z-index: 2147483646;\n}\n\n.netherite-hidden {\n    display: none !important;\n}\n\n.netherite-dragging {\n    pointer-events: none;\n    user-select: none;\n}\n\n/* Smooth transitions */\n.netherite-glass,\n.netherite-metallic {\n    transition: all 0.3s ease;\n}\n\n/* Hover effects */\n.netherite-glass:hover {\n    background: var(--netherite-hover-bg);\n    transform: translateY(-1px);\n}\n\n/* Animation keyframes */\n@keyframes netherite-scan-effect {\n    0% {\n        top: 0;\n        opacity: 0.8;\n    }\n    100% {\n        top: 100%;\n        opacity: 0;\n    }\n}\n\n@keyframes netherite-fade-in {\n    from {\n        opacity: 0;\n        transform: translateY(10px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n@keyframes netherite-slide-up {\n    from {\n        opacity: 0;\n        transform: translateY(20px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.netherite-animate-scan {\n    animation: netherite-scan-effect 2s ease-in-out;\n}\n\n.netherite-animate-fade-in {\n    animation: netherite-fade-in 0.3s ease-out;\n}\n\n.netherite-animate-slide-up {\n    animation: netherite-slide-up 0.4s ease-out;\n}\n        "}static removeObserver(e){this.observers.delete(e),o.Logger.debug("Shadow root removed from theme observers")}static getCurrentTheme(){return this.currentTheme}static forceUpdate(){this.updateAllObservers(),o.Logger.debug("Forced theme update on all observers")}}t.ThemeManager=s,s.currentTheme="light",s.observers=new Set},628:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Logger=void 0;class n{static info(e,...t){(this.isDevelopment||this.shouldLog("info"))&&console.info(`${this.PREFIX} ‚ÑπÔ∏è`,e,...t)}static warn(e,...t){(this.isDevelopment||this.shouldLog("warn"))&&console.warn(`${this.PREFIX} ‚ö†Ô∏è`,e,...t)}static error(e,...t){console.error(`${this.PREFIX} ‚ùå`,e,...t)}static debug(e,...t){this.isDevelopment&&console.debug(`${this.PREFIX} üêõ`,e,...t)}static success(e,...t){(this.isDevelopment||this.shouldLog("info"))&&console.log(`${this.PREFIX} ‚úÖ`,e,...t)}static trace(e,t){if(this.isDevelopment){const n=t?` (${t}ms)`:"";console.log(`${this.PREFIX} üìä ${e}${n}`)}}static aiSession(e,t){this.isDevelopment&&console.log(`${this.PREFIX} ${{create:"üöÄ",prompt:"üí≠",destroy:"üóëÔ∏è"}[e]} AI Session ${e}`,t||"")}static ui(e,t,n){this.isDevelopment&&console.log(`${this.PREFIX} üé® UI [${t}] ${e}`,n||"")}static chromeAPI(e,t,n){this.isDevelopment&&console.log(`${this.PREFIX} üîå Chrome.${e} ${t}`,n||"")}static shouldLog(e){return"warn"===e}static startTimer(e){const t=performance.now();return()=>{const n=Math.round(performance.now()-t);this.trace(e,n)}}static field(e,t,n=!0){const o=n?"‚úÖ":"‚ùå";this.isDevelopment&&console.log(`${this.PREFIX} üìù Field ${e}: ${t} ${o}`)}}t.Logger=n,n.PREFIX="[Netherite]",n.isDevelopment=!0},922:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FormFieldDetector=void 0;const o=n(628);t.FormFieldDetector=class{constructor(){this.detectedFields=[],this.detectFields()}detectFields(){this.detectedFields=[],o.Logger.info("Starting form field detection...");const e=document.querySelectorAll("form"),t=document.querySelectorAll("input, textarea, select");return e.forEach(e=>{this.processFormElements(e)}),t.forEach(e=>{e.closest("form")||this.processFieldElement(e)}),this.detectedFields=this.filterAndDeduplicateFields(this.detectedFields),o.Logger.success(`Form field detection complete: ${this.detectedFields.length} fields found`),this.detectedFields}processFormElements(e){const t=e.querySelectorAll("input, textarea, select");t.forEach(e=>{this.processFieldElement(e)}),o.Logger.field("detect",`form with ${t.length} inputs`)}processFieldElement(e){const t=e;if(this.shouldSkipField(t))return;const n=this.extractFieldInfo(t);n&&(this.detectedFields.push(n),o.Logger.field("detect",n.label||"unlabeled field",!0))}shouldSkipField(e){if("hidden"===e.type)return!0;if(e.disabled)return!0;if("readOnly"in e&&e.readOnly&&"type"in e&&"text"!==e.type)return!0;const t=(e.name||"").toLowerCase(),n=(e.id||"").toLowerCase();if(["csrf","token","_token","authenticity_token","utf8","_method","commit","submit","captcha","recaptcha","g-recaptcha-response"].some(e=>t.includes(e)||n.includes(e)))return!0;const o=window.getComputedStyle(e);return"none"===o.display||"hidden"===o.visibility}extractFieldInfo(e){try{const t=this.findFieldLabel(e),n=this.getFieldType(e),o=this.isFieldRequired(e);return{element:e,label:t,type:n,required:o,placeholder:"placeholder"in e&&e.placeholder||void 0,maxLength:this.getMaxLength(e)}}catch(e){return o.Logger.warn("Error extracting field info:",e),null}}findFieldLabel(e){if(e.id){const t=document.querySelector(`label[for="${e.id}"]`);if(t&&t.textContent)return this.cleanLabelText(t.textContent)}const t=e.closest("label");if(t&&t.textContent)return this.cleanLabelText(t.textContent);if(e.getAttribute("aria-label"))return this.cleanLabelText(e.getAttribute("aria-label"));const n=e.getAttribute("aria-labelledby");if(n){const e=document.getElementById(n);if(e&&e.textContent)return this.cleanLabelText(e.textContent)}if(e.title)return this.cleanLabelText(e.title);const o=e.placeholder;if(o)return this.cleanLabelText(o);const s=e.name;if(s)return this.formatNameAsLabel(s);const i=this.findNearbyText(e);return i?this.cleanLabelText(i):"Unlabeled field"}cleanLabelText(e){return e.trim().replace(/\s+/g," ").replace(/[*:]+$/,"").trim()}formatNameAsLabel(e){return e.replace(/[_-]/g," ").replace(/([a-z])([A-Z])/g,"$1 $2").toLowerCase().replace(/^./,e=>e.toUpperCase())}findNearbyText(e){let t=e.previousElementSibling,n=0;for(;t&&n<3;){const e=t.textContent?.trim();if(e&&e.length>0&&e.length<100)return e;t=t.previousElementSibling,n++}const o=e.parentElement;if(o){const e=o.textContent?.trim();if(e&&e.length<100&&e.split(/\s+/).length<=10)return e}return null}getFieldType(e){if("TEXTAREA"===e.tagName)return"textarea";if("SELECT"===e.tagName)return e.multiple?"select-multiple":"select-one";const t=e.type.toLowerCase();return{text:"text",email:"email",password:"password",tel:"phone",url:"url",number:"number",range:"range",date:"date","datetime-local":"datetime",time:"time",month:"month",week:"week",color:"color",file:"file",checkbox:"checkbox",radio:"radio",submit:"submit",button:"button",reset:"reset",search:"search"}[t]||t}isFieldRequired(e){if(e.required)return!0;if("true"===e.getAttribute("aria-required"))return!0;const t=this.findFieldLabel(e);return!(!t.includes("*")&&!t.toLowerCase().includes("required"))}getMaxLength(e){if("maxLength"in e&&e.maxLength>0)return e.maxLength;const t=e.pattern;if(t){const e=t.match(/\{(\d+),?(\d+)?\}/);if(e)return parseInt(e[2]||e[1])}}filterAndDeduplicateFields(e){const t=new Set,n=[];for(const o of e){if(t.has(o.element))continue;const e=o.type.toLowerCase();["submit","button","reset","image"].includes(e)||(t.add(o.element),n.push(o))}return n}getDetectedFields(){return this.detectedFields}getFieldsByType(e){return this.detectedFields.filter(t=>t.type===e)}getRequiredFields(){return this.detectedFields.filter(e=>e.required)}getFormSummary(){if(0===this.detectedFields.length)return"No form fields detected on this page.";const e=this.detectedFields.map(e=>{const t=e.required?" (required)":"",n=e.maxLength?` (max: ${e.maxLength})`:"";return`- ${e.label}: ${e.type}${t}${n}`});return`Detected ${this.detectedFields.length} form fields:\n${e.join("\n")}`}refresh(){return o.Logger.info("Refreshing form field detection..."),this.detectFields()}}}},t={};function n(o){var s=t[o];if(void 0!==s)return s.exports;var i=t[o]={exports:{}};return e[o](i,i.exports,n),i.exports}(()=>{const e=n(122),t=n(323),o=n(107),s=n(922),i=n(38),a=n(628),r=new class{constructor(){this.floatingToolbar=null,this.viewModeScanner=null,this.chatPanel=null,this.formFieldDetector=null,this.isInitialized=!1,this.initialize()}async initialize(){try{a.Logger.info("Netherite content script initializing..."),await i.AIServiceFactory.isAvailable()||a.Logger.warn("AI services not available - extension functionality limited"),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{this.setupComponents()}):this.setupComponents(),this.setupGlobalEventListeners(),this.setupExtensionCommands(),this.isInitialized=!0,a.Logger.success("Netherite content script initialized successfully")}catch(e){a.Logger.error("Failed to initialize Netherite content script:",e)}}setupComponents(){try{this.floatingToolbar=new e.FloatingToolbar,this.formFieldDetector=new s.FormFieldDetector,a.Logger.debug("UI components set up")}catch(e){a.Logger.error("Failed to set up UI components:",e)}}setupGlobalEventListeners(){document.addEventListener("netherite:view-mode",this.handleViewModeActivation.bind(this)),document.addEventListener("netherite:chat-mode",this.handleChatModeActivation.bind(this)),document.addEventListener("netherite:voice-mode",this.handleVoiceModeActivation.bind(this)),document.addEventListener("netherite:view-complete",this.handleViewModeComplete.bind(this)),document.addEventListener("netherite:chat-close",this.handleChatClose.bind(this)),document.addEventListener("visibilitychange",()=>{document.hidden?a.Logger.debug("Page became hidden"):a.Logger.debug("Page became visible")}),a.Logger.debug("Global event listeners set up")}setupExtensionCommands(){chrome?.commands&&chrome.commands.onCommand.addListener(e=>{a.Logger.chromeAPI("commands","onCommand",e),"toggle-toolbar"===e&&this.floatingToolbar?.toggle()}),chrome?.runtime&&chrome.runtime.onMessage.addListener((e,t,n)=>(a.Logger.chromeAPI("runtime","onMessage",e),this.handleRuntimeMessage(e,t,n),!0))}handleRuntimeMessage(e,t,n){switch(e.type){case"toggle-toolbar":this.floatingToolbar?.show(),n({success:!0});break;case"deactivate-toolbar":this.floatingToolbar?.hide(),n({success:!0});break;case"get-page-info":const t={title:document.title,url:window.location.href,formFields:this.formFieldDetector?.getDetectedFields()||[]};n(t);break;case"check-ai-status":i.AIServiceFactory.isAvailable().then(e=>{n({aiAvailable:e})});break;default:a.Logger.warn("Unknown runtime message type:",e.type),n({error:"Unknown message type"})}}async handleViewModeActivation(e){try{a.Logger.ui("View mode activated","ContentScript"),this.viewModeScanner||(this.viewModeScanner=new t.ViewModeScanner),this.floatingToolbar?.updateButtonStates("scanner"),await this.viewModeScanner.scanPage()}catch(e){a.Logger.error("Error activating view mode:",e)}}async handleChatModeActivation(e){try{a.Logger.ui("Chat mode activated","ContentScript"),this.chatPanel||(this.chatPanel=new o.ChatPanel),this.floatingToolbar?.updateButtonStates("chat"),this.chatPanel.show()}catch(e){a.Logger.error("Error activating chat mode:",e)}}handleVoiceModeActivation(e){a.Logger.ui("Voice mode activated (not implemented)","ContentScript")}handleViewModeComplete(e){a.Logger.ui("View mode analysis complete","ContentScript"),this.floatingToolbar?.updateButtonStates(null);const t=e.detail;t&&this.chatPanel&&this.chatPanel.setViewModeContext(t)}handleChatClose(e){a.Logger.ui("Chat panel closed","ContentScript"),this.floatingToolbar?.updateButtonStates(null)}getPageContent(){const e=document.querySelectorAll('main, article, section, .content, #content, [role="main"]');let t="";if(e.length>0)e.forEach(e=>{t+=e.outerHTML});else{const e=document.body.cloneNode(!0);e.querySelectorAll('script, style, noscript, [id^="netherite"], [class*="netherite"]').forEach(e=>e.remove()),t=e.innerHTML}return t.length>1e4&&(t=t.substring(0,1e4)+"... [content truncated]"),{html:t,title:document.title,url:window.location.href}}isReady(){return this.isInitialized}cleanup(){a.Logger.info("Cleaning up Netherite content script...");try{this.floatingToolbar?.destroy(),this.viewModeScanner?.destroy(),this.chatPanel?.destroy(),i.AIServiceFactory.cleanup(),a.Logger.success("Netherite content script cleaned up")}catch(e){a.Logger.error("Error during cleanup:",e)}}};window.addEventListener("beforeunload",()=>{r.cleanup()}),window.NetheriteContentScript=r})()})();