(()=>{"use strict";var e={628:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Logger=void 0;class o{static info(e,...t){(this.isDevelopment||this.shouldLog("info"))&&console.info(`${this.PREFIX} ℹ️`,e,...t)}static warn(e,...t){(this.isDevelopment||this.shouldLog("warn"))&&console.warn(`${this.PREFIX} ⚠️`,e,...t)}static error(e,...t){console.error(`${this.PREFIX} ❌`,e,...t)}static debug(e,...t){this.isDevelopment&&console.debug(`${this.PREFIX} 🐛`,e,...t)}static success(e,...t){(this.isDevelopment||this.shouldLog("info"))&&console.log(`${this.PREFIX} ✅`,e,...t)}static trace(e,t){if(this.isDevelopment){const o=t?` (${t}ms)`:"";console.log(`${this.PREFIX} 📊 ${e}${o}`)}}static aiSession(e,t){this.isDevelopment&&console.log(`${this.PREFIX} ${{create:"🚀",prompt:"💭",destroy:"🗑️"}[e]} AI Session ${e}`,t||"")}static ui(e,t,o){this.isDevelopment&&console.log(`${this.PREFIX} 🎨 UI [${t}] ${e}`,o||"")}static chromeAPI(e,t,o){this.isDevelopment&&console.log(`${this.PREFIX} 🔌 Chrome.${e} ${t}`,o||"")}static shouldLog(e){return"warn"===e}static startTimer(e){const t=performance.now();return()=>{const o=Math.round(performance.now()-t);this.trace(e,o)}}static field(e,t,o=!0){const s=o?"✅":"❌";this.isDevelopment&&console.log(`${this.PREFIX} 📝 Field ${e}: ${t} ${s}`)}}t.Logger=o,o.PREFIX="[Netherite]",o.isDevelopment=!0}},t={};function o(s){var r=t[s];if(void 0!==r)return r.exports;var n=t[s]={exports:{}};return e[s](n,n.exports,o),n.exports}(()=>{const e=o(628);chrome.runtime.onInstalled.addListener(t=>{e.Logger.info("Netherite extension installed",t.reason),"install"===t.reason?e.Logger.success("Welcome to Netherite! Press Alt+N on any webpage to get started."):"update"===t.reason&&e.Logger.info("Netherite extension updated to version",chrome.runtime.getManifest().version)}),chrome.commands.onCommand.addListener((t,o)=>{e.Logger.chromeAPI("commands","onCommand",{command:t,tabId:o?.id}),"toggle-toolbar"===t&&o?.id&&chrome.tabs.sendMessage(o.id,{type:"toggle-toolbar",timestamp:Date.now()}).catch(t=>{e.Logger.warn("Failed to send toggle message to tab:",t)})}),chrome.action.onClicked.addListener(t=>{e.Logger.chromeAPI("action","onClicked",{tabId:t.id}),t.id&&chrome.tabs.sendMessage(t.id,{type:"activate-toolbar",source:"popup",timestamp:Date.now()}).catch(t=>{e.Logger.warn("Failed to send message from popup click:",t)})}),chrome.runtime.onMessage.addListener((t,o,s)=>(e.Logger.chromeAPI("runtime","onMessage",{type:t.type,tabId:o.tab?.id,source:o.url}),async function(t,o,s){try{switch(t.type){case"check-ai-availability":s({available:!1,message:"AI availability must be checked in content script context"});break;case"get-extension-info":const o=chrome.runtime.getManifest();s({name:o.name,version:o.version,permissions:o.permissions});break;case"log-error":e.Logger.error("Error from content script:",t.error),s({acknowledged:!0});break;case"log-info":e.Logger.info("Info from content script:",t.message),s({acknowledged:!0});break;case"storage-backup":s({status:"not-implemented",message:"Storage backup not yet implemented"});break;default:e.Logger.warn("Unknown message type received:",t.type),s({error:"Unknown message type",type:t.type})}}catch(t){e.Logger.error("Error handling message:",t),s({error:"Internal error processing message",details:t instanceof Error?t.message:"Unknown error"})}}(t,0,s),!0)),chrome.tabs.onUpdated.addListener((t,o,s)=>{"complete"===o.status&&s.url&&(e.Logger.debug("Tab updated",{tabId:t,url:s.url}),s.url.startsWith("chrome://")||s.url.startsWith("chrome-extension://")||s.url.startsWith("moz-extension://")||s.url.startsWith("edge://"))}),chrome.runtime.onStartup.addListener(()=>{e.Logger.info("Netherite extension started")}),chrome.runtime.onSuspend.addListener(()=>{e.Logger.info("Netherite extension suspended")});let t=null;t&&clearInterval(t),t=setInterval(()=>{chrome.runtime.getPlatformInfo().then(()=>{}).catch(()=>{e.Logger.debug("Service worker ping failed")})},25e3),e.Logger.success("Netherite background service worker initialized")})()})();